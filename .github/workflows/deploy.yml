name: Deploy to Shared Hosting

on:
  push:
    branches:
      - main
      - developing

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set deployment paths
        id: deploy_path
        run: |
          # Handle case where the branch is developing by using a dev/ subdirectory
          # SSH home is httpd.private, so paths are relative to that directory
          # On main: ../httpd.www/, templates/, vendor/, github_info.php at root
          # On dev:  ../httpd.www/dev/, dev/templates/, dev/vendor/, dev/github_info.php
          if [ "$GITHUB_REF" = "refs/heads/developing" ]; then
            ENV_PREFIX="dev/"
          else
            ENV_PREFIX=""
          fi

          PUBLIC_PATH="${{ secrets.SSH_PUBLIC_PATH || '../httpd.www' }}/${ENV_PREFIX}"
          PRIVATE_PATH="${ENV_PREFIX}"

          echo "public=$PUBLIC_PATH" >> $GITHUB_OUTPUT
          echo "private=$PRIVATE_PATH" >> $GITHUB_OUTPUT





      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Install Composer dependencies
        run: composer install --no-dev --optimize-autoloader

      - name: Create deployment directories on server
        run: |
          ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no -p ${{ secrets.SSH_PORT || 22 }} \
            ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} \
            "mkdir -p ${{ steps.deploy_path.outputs.public }} ${{ steps.deploy_path.outputs.private }}"

      - name: Deploy public files via rsync
        run: |
          rsync -avz --delete \
            -e "ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no -p ${{ secrets.SSH_PORT || 22 }}" \
            ./public/ ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:${{ steps.deploy_path.outputs.public }}/

      - name: Deploy private files via rsync
        run: |
          rsync -avz --delete \
            -e "ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no -p ${{ secrets.SSH_PORT || 22 }}" \
            --include='templates/***' \
            --include='vendor/***' \
            --include='github_info.php' \
            --exclude='*' \
            ./ ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:${{ steps.deploy_path.outputs.private }}/

      - name: Cleanup SSH key
        if: always()
        run: rm -f ~/.ssh/deploy_key

