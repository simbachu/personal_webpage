name: Validate Content Branch

on:
  push:
    branches:
      - 'content/**'
  pull_request:
    branches:
      - main
      - 'content/**'

jobs:
  validate-yaml:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          coverage: none

      - name: Install dependencies
        run: composer install

      - name: Validate YAML syntax
        run: |
          echo "Validating YAML syntax..."

          # Check if pokemon_opinions.yaml exists and is valid YAML
          if [ -f "content/pokemon_opinions.yaml" ]; then
            echo "Validating pokemon_opinions.yaml..."
            php -r "
              require_once 'vendor/autoload.php';
              try {
                \$content = file_get_contents('content/pokemon_opinions.yaml');
                \$data = \Symfony\Component\Yaml\Yaml::parse(\$content);
                if (!is_array(\$data)) {
                  echo 'ERROR: pokemon_opinions.yaml does not contain a valid YAML structure\n';
                  exit(1);
                }
                echo 'SUCCESS: pokemon_opinions.yaml has valid YAML syntax\n';
                echo 'Found ' . count(\$data) . ' Pokemon opinions\n';
              } catch (Exception \$e) {
                echo 'ERROR: Invalid YAML syntax in pokemon_opinions.yaml: ' . \$e->getMessage() . '\n';
                exit(1);
              }
            "
          else
            echo "ERROR: pokemon_opinions.yaml not found"
            exit 1
          fi

      - name: Validate Pokemon opinions structure
        run: |
          echo "Validating Pokemon opinions structure..."

          php -r "
            require_once 'vendor/autoload.php';
            try {
              \$content = file_get_contents('content/pokemon_opinions.yaml');
              \$data = \Symfony\Component\Yaml\Yaml::parse(\$content);

              if (!is_array(\$data)) {
                echo 'ERROR: pokemon_opinions.yaml must contain an object/associative array\n';
                exit(1);
              }

              \$validRatings = ['S', 'A', 'B', 'C', 'D'];
              \$errors = [];
              \$pokemonCount = 0;

              foreach (\$data as \$pokemonName => \$opinionData) {
                \$pokemonCount++;

                if (!is_array(\$opinionData)) {
                  \$errors[] = \"Pokemon '\$pokemonName' must have an object structure\";
                  continue;
                }

                if (!isset(\$opinionData['opinion'])) {
                  \$errors[] = \"Pokemon '\$pokemonName' is missing required 'opinion' field\";
                } elseif (!is_string(\$opinionData['opinion'])) {
                  \$errors[] = \"Pokemon '\$pokemonName' opinion must be a string\";
                }

                if (!isset(\$opinionData['rating'])) {
                  \$errors[] = \"Pokemon '\$pokemonName' is missing required 'rating' field\";
                } elseif (!in_array(\$opinionData['rating'], \$validRatings)) {
                  \$errors[] = \"Pokemon '\$pokemonName' has invalid rating '\" . \$opinionData['rating'] . \"'. Must be one of: \" . implode(', ', \$validRatings);
                }
              }

              if (empty(\$errors)) {
                echo \"SUCCESS: All \$pokemonCount Pokemon opinions have valid structure\n\";
                echo \"Valid ratings found: \" . implode(', ', array_unique(array_column(\$data, 'rating'))) . \"\n\";
              } else {
                echo \"ERROR: Structure validation failed:\n\";
                foreach (\$errors as \$error) {
                  echo \"  - \$error\n\";
                }
                exit(1);
              }

            } catch (Exception \$e) {
              echo 'ERROR: Failed to validate structure: ' . \$e->getMessage() . '\n';
              exit(1);
            }
          "

      - name: Run existing tests to ensure compatibility
        run: |
          echo "Running tests to ensure YAML changes don't break existing functionality..."
          vendor/bin/phpunit --testsuite=Unit --filter="PokemonOpinionServiceTest"

  create-pr:
    runs-on: ubuntu-latest
    needs: validate-yaml
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/heads/content/')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Git
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Merge content changes from ${{ github.ref_name }}"
          title: "Content Update: ${{ github.ref_name }}"
          body: |
            This PR contains content updates from the `${{ github.ref_name }}` branch.

            **Changes:**
            - Pokemon opinions have been validated for YAML syntax and structure
            - All tests pass

            **Validation Results:**
            ✅ YAML syntax is valid
            ✅ Pokemon opinion structure is correct
            ✅ All required fields present
            ✅ All ratings are valid (S, A, B, C, D)

            Ready for review and merge to main.
          branch: "merge-${{ github.ref_name }}"
          base: main
          delete-branch: true
          labels: content-update,auto-generated
