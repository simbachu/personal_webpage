/* Reset and base styles */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

:root {
    /* Neue Typographie Color Palette */
    --black: #000000;
    --process-black: #323232;
    --white: #FAFAF8;
    --red: #C84C3C;
    --red-dark: #B23C2E;
    --process-black-light: #404040;
    --spacing-unit: 1.5rem;
    --line-weight: 0.25rem;
    --line-weight-thick: 1rem;

    /* Layout grid (shared between header, nav and main) */
    --layout-left: 1fr; /* contact / title quadrant */
    --layout-axis: calc(var(--spacing-unit) * 4); /* active whitespace axis */
    --layout-right: 3fr; /* primary content quadrant */
    --layout-grid-gap: 1rem; /* gap between grid areas */
    --page-margin: calc(var(--spacing-unit) * 3); /* outer page margins */
    --header-bar-height: 1rem; /* height of the red divider bar */
    --header-bar-offset: calc(var(--spacing-unit) * 0.33); /* vertical offset for the header bar relative to nav center */

    --transition-fast: 0.15s ease;
    --transition-base: 0.3s cubic-bezier(0.34, 1.56, 0.64, 1); /* overshoot */
    --transition-smooth: 0.45s cubic-bezier(0.4, 0, 0.2, 1);
    --ease-bounce: cubic-bezier(0.68, -0.55, 0.265, 1.55); /* anticipation + overshoot */

    --gradient-red: linear-gradient(135deg, var(--red) 0%, var(--red-dark) 100%);
    --gradient-process-black: linear-gradient(135deg, var(--process-black) 0%, var(--process-black-light) 100%);
    /* Monster type colors (WCAG-aware approximations) */
    --type-normal: #A8A77A;
    --type-fire: #EE8130;
    --type-water: #6390F0;
    --type-electric: #F7D02C;
    --type-grass: #7AC74C;
    --type-ice: #96D9D6;
    --type-fighting: #C22E28;
    --type-poison: #A33EA1;
    --type-ground: #E2BF65;
    --type-flying: #A98FF3;
    --type-psychic: #F95587;
    --type-bug: #A6B91A;
    --type-rock: #B6A136;
    --type-ghost: #735797;
    --type-dragon: #6F35FC;
    --type-dark: #705746;
    --type-steel: #B7B7CE;
    --type-fairy: #D685AD;
}

body {
    /* Main page layout with typographic grid and page margins */
    margin: var(--page-margin);
    font-family: 'Inter', 'Helvetica Neue', Helvetica, Arial, sans-serif;
    line-height: 1.4;
    color: var(--black);
    background-color: var(--white);
    font-weight: 400;
    display: grid;
    justify-content: center;
    overflow-x: hidden; /* Prevent horizontal scrollbar from extended elements */
    /* Grid for the header, main content, and footer */
    grid-template-columns: [left-column-start] var(--layout-left) [left-column-end axis-start] var(--layout-axis) [axis-end right-column-start] var(--layout-right) [right-column-end];
    grid-template-rows: [header-start] auto [header-end main-start] 1fr [main-end footer-start] auto [footer-end];
    gap: var(--layout-grid-gap);
}

@supports (font-variation-settings: normal) {
    body {
        font-family: 'InterVariable', 'Helvetica Neue', Helvetica, Arial, sans-serif;
        font-optical-sizing: auto;
    }
}

header {
    color: var(--black);
    position: relative;
    justify-content: center;
    /* Span full width */
    grid-column: left-column-start / right-column-end;
    display: grid;
    /* Fallback: single column for browsers without subgrid support */
    grid-template-columns: 1fr;
    /* Grid rows for asymmetric header layout */
    grid-template-rows: [upper] 1fr [gutter] calc(var(--spacing-unit) * 2 + var(--header-bar-offset)) [lower];
}

/* Modern browsers: use subgrid to inherit parent column definitions */
@supports (grid-template-columns: subgrid) {
    header {
        grid-template-columns: subgrid;
    }
}

/* Red bar dividing the header title and nav, aligned to the grid gutters */
header::after {
    content: '';
    display: block; /* make the pseudo-element a grid item */
    grid-column: left-column-start / right-column-end; /* span axis gutter through content area */
    grid-row: gutter; /* place in gutter */
    height: var(--header-bar-height);
    justify-self: stretch;
    background: var(--gradient-red);
    transform: scaleX(0);
    transform-origin: center;
    /* Animate the bar scaling in from the center */
    animation: slideInBar 0.6s var(--ease-bounce) forwards;
    animation-delay: 0.15s;
}

/* The page title in the top-left quadrant of the header */
header h1 {
    /* Fallback: center in single column */
    text-align: center;
    font-size: 4rem;
    font-weight: 700;
    text-transform: uppercase;
    font-size: clamp(1.8rem, 6vw, 4rem);
    align-self: end;
    white-space: nowrap;
    overflow-wrap: normal;
    position: relative;
}

/* Subgrid support: place in left column with right alignment */
@supports (grid-template-columns: subgrid) {
    header h1 {
        grid-column: left-column-start / left-column-end;
        grid-row: upper;
        text-align: right;
    }
}

@keyframes slideInBar {
    0% {
        transform: scaleX(0);
    }
    100% {
        transform: scaleX(1);
    }
}

nav {
    /* Nav section of the header contains the ul */
    display: block;
    grid-row: lower; /* place in bottom row of header grid */
    text-align: center;
}

/* Subgrid support: place in right column with left alignment */
@supports (grid-template-columns: subgrid) {
    nav {
        grid-column: right-column-start;
        text-align: left;
    }
}



nav ul {
    width: fit-content;
    min-width: 15rem; /* Fixed minimum width to prevent border shifting */
    list-style: none;
    display: flex;
    gap: calc(var(--spacing-unit) * 0.5);
    flex-direction: column;
    align-items: center; /* fallback: center alignment */
    align-self: start;
    padding-right: calc(var(--spacing-unit) * 1);
    position: relative;
    border-right: var(--line-weight-thick) solid var(--process-black);
}

/* Subgrid support: left alignment */
@supports (grid-template-columns: subgrid) {
    nav ul {
        align-items: flex-start;
    }
}

nav li {
    width: 100%; /* Full width of ul container */
}

nav a {
    color: var(--black);
    text-decoration: none;
    font-weight: 700;
    font-size: 1.3rem;
    transition: color var(--transition-base), transform 0.2s var(--ease-bounce);
    display: inline-block;
    position: relative; /* For absolute positioning of transform */
}

nav a:hover,
nav a:focus {
    color: var(--red);
    outline: none;
    transform: translateX(0.25rem);
    will-change: transform; /* Optimize for transform animation */
}

/* Add # symbol for anchor links on hover */
nav a[href^="#"]:hover::after,
nav a[href^="#"]:focus::after {
    content: ' #';
    font-weight: 700;
    opacity: 0.7;
}

nav a:focus-visible {
    outline: 0.125rem solid var(--red);
    outline-offset: 0.25rem;
}

main {
    /* Span full width */
    grid-column: left-column-start / right-end;
    display: grid;
    /* Fallback: single column for browsers without subgrid support */
    grid-template-columns: 1fr;
    grid-template-rows: [main-content-start] auto [main-content-end aside-start] auto [aside-end];
    max-width: none;
    margin-left: 0;
    gap: 0;
}

/* Modern browsers: use subgrid to inherit parent column definitions */
@supports (grid-template-columns: subgrid) {
    main {
        grid-template-columns: subgrid;
    }
}

section {
    margin-top: calc(var(--spacing-unit) * 6); /* space between sections */
    position: relative;
    opacity: 0;
    animation: fadeInUp 0.7s cubic-bezier(0.34, 1.3, 0.64, 1) forwards;
}

section:last-of-type { margin-bottom: calc(var(--spacing-unit) * 6); } /* space after last section */

section:nth-of-type(1) { animation-delay: 0.2s; }
section:nth-of-type(2) { animation-delay: 0.35s; }
section:nth-of-type(3) { animation-delay: 0.5s; }


/* Content of the website fades in and moves up slightly on page load */
@keyframes fadeInUp {
    0% {
        opacity: 0;
        transform: translateY(2rem);
    }
    60% {
        opacity: 1;
    }
    100% {
        opacity: 1;
        transform: translateY(0);
    }
}

section h2 {
    color: var(--black);
    margin-bottom: calc(var(--spacing-unit) * 3);
    font-size: 2.5rem;
    font-weight: 700;
    border-bottom: var(--line-weight-thick) solid transparent;
    border-image: var(--gradient-red) 1;
    padding-bottom: calc(var(--spacing-unit) * 0.25);
    display: inline-block;
    letter-spacing: -0.01em;
}

/* Article: semantic wrapper for main content (sections, blog posts, etc.) */
article {
    /* Fallback: span full width, left-aligned */
    grid-column: 1 / -1;
    grid-row: main-content-start / main-content-end;
    text-align: left;
    display: flex;
    flex-direction: column;
    gap: 0; /* sections handle their own margins */
}

/* Monster Card */
.monster-card {
    background: var(--white);
    border: var(--line-weight-thick) solid transparent;
    border-image: var(--gradient-process-black) 1;
    margin-top: calc(var(--spacing-unit) * 4);
}

.monster-card-header {
    padding: calc(var(--spacing-unit) * 1) calc(var(--spacing-unit) * 2);
    background: linear-gradient(90deg, transparent, transparent);
}

.monster-card-title {
    font-size: 2rem;
    font-weight: 800;
}

.monster-card-id {
    color: var(--process-black);
    font-weight: 500;
    margin-left: 0.5rem;
}

.monster-card-body {
    display: grid;
    grid-template-columns: 1fr;
    gap: calc(var(--spacing-unit) * 2);
    padding: calc(var(--spacing-unit) * 2);
}

.monster-card-image .pinstripe {
    background-image: repeating-linear-gradient(
        45deg,
        rgba(0,0,0,0.08) 0,
        rgba(0,0,0,0.08) 2px,
        transparent 2px,
        transparent 6px
    );
    border: var(--line-weight) solid var(--process-black);
    padding: 0.75rem;
}

.monster-card-image img {
    width: 100%;
    height: auto;
    display: block;
    background: var(--white);
    max-width: 100%; /* Prevent image from overflowing */
    object-fit: contain; /* Maintain aspect ratio */
}

.monster-card-info .monster-types {
    list-style: none;
    display: flex;
    gap: 0.5rem;
    margin: 0 0 1rem 0;
    padding: 0;
}

.monster-card-info .type {
    padding: 0.2rem 0.5rem;
    border: var(--line-weight) solid var(--process-black);
    font-weight: 700;
    text-transform: uppercase;
    letter-spacing: 0.04em;
    background: var(--white);
}

/* Monster Card Opinion Section */
.monster-card-opinion {
    margin: calc(var(--spacing-unit) * 1) 0;
    padding: calc(var(--spacing-unit) * 1);
    border: var(--line-weight) solid var(--process-black);
    background: var(--white);
}

.monster-card-opinion-text {
    font-size: 0.95rem;
    line-height: 1.5;
    margin: 0 0 calc(var(--spacing-unit) * 0.5) 0;
    font-style: italic;
    color: var(--process-black);
}

.monster-card-rating {
    font-size: 0.85rem;
    margin: 0;
    font-weight: 600;
    color: var(--black);
}

.monster-card-rating-value {
    color: var(--red);
    font-weight: 700;
}

/* Type color helpers */
.type-normal { background-color: var(--type-normal); }
.type-fire { background-color: var(--type-fire); }
.type-water { background-color: var(--type-water); }
.type-electric { background-color: var(--type-electric); }
.type-grass { background-color: var(--type-grass); }
.type-ice { background-color: var(--type-ice); }
.type-fighting { background-color: var(--type-fighting); }
.type-poison { background-color: var(--type-poison); }
.type-ground { background-color: var(--type-ground); }
.type-flying { background-color: var(--type-flying); }
.type-psychic { background-color: var(--type-psychic); }
.type-bug { background-color: var(--type-bug); }
.type-rock { background-color: var(--type-rock); }
.type-ghost { background-color: var(--type-ghost); }
.type-dragon { background-color: var(--type-dragon); }
.type-dark { background-color: var(--type-dark); }
.type-steel { background-color: var(--type-steel); }
.type-fairy { background-color: var(--type-fairy); }

/* Build CSS vars for type1/type2 using attribute selectors */
[data-type1="normal"] { --type-attr1: var(--type-normal); }
[data-type1="fire"] { --type-attr1: var(--type-fire); }
[data-type1="water"] { --type-attr1: var(--type-water); }
[data-type1="electric"] { --type-attr1: var(--type-electric); }
[data-type1="grass"] { --type-attr1: var(--type-grass); }
[data-type1="ice"] { --type-attr1: var(--type-ice); }
[data-type1="fighting"] { --type-attr1: var(--type-fighting); }
[data-type1="poison"] { --type-attr1: var(--type-poison); }
[data-type1="ground"] { --type-attr1: var(--type-ground); }
[data-type1="flying"] { --type-attr1: var(--type-flying); }
[data-type1="psychic"] { --type-attr1: var(--type-psychic); }
[data-type1="bug"] { --type-attr1: var(--type-bug); }
[data-type1="rock"] { --type-attr1: var(--type-rock); }
[data-type1="ghost"] { --type-attr1: var(--type-ghost); }
[data-type1="dragon"] { --type-attr1: var(--type-dragon); }
[data-type1="dark"] { --type-attr1: var(--type-dark); }
[data-type1="steel"] { --type-attr1: var(--type-steel); }
[data-type1="fairy"] { --type-attr1: var(--type-fairy); }

[data-type2="normal"] { --type-attr2: var(--type-normal); }
[data-type2="fire"] { --type-attr2: var(--type-fire); }
[data-type2="water"] { --type-attr2: var(--type-water); }
[data-type2="electric"] { --type-attr2: var(--type-electric); }
[data-type2="grass"] { --type-attr2: var(--type-grass); }
[data-type2="ice"] { --type-attr2: var(--type-ice); }
[data-type2="fighting"] { --type-attr2: var(--type-fighting); }
[data-type2="poison"] { --type-attr2: var(--type-poison); }
[data-type2="ground"] { --type-attr2: var(--type-ground); }
[data-type2="flying"] { --type-attr2: var(--type-flying); }
[data-type2="psychic"] { --type-attr2: var(--type-psychic); }
[data-type2="bug"] { --type-attr2: var(--type-bug); }
[data-type2="rock"] { --type-attr2: var(--type-rock); }
[data-type2="ghost"] { --type-attr2: var(--type-ghost); }
[data-type2="dragon"] { --type-attr2: var(--type-dragon); }
[data-type2="dark"] { --type-attr2: var(--type-dark); }
[data-type2="steel"] { --type-attr2: var(--type-steel); }
[data-type2="fairy"] { --type-attr2: var(--type-fairy); }

/* Header gradient logic: single vs dual types with 1rem transition */
.monster-card[data-type1][data-type2=""] .monster-card-header {
    background: linear-gradient(90deg, var(--type-attr1, var(--type-normal)) 0%, var(--type-attr1, var(--type-normal)) 100%);
}

.monster-card[data-type1]:not([data-type2=""]) .monster-card-header {
    background: linear-gradient(90deg,
        var(--type-attr1) 0%,
        var(--type-attr1) calc(50% - 0.5rem),
        var(--type-attr2) calc(50% + 0.5rem),
        var(--type-attr2) 100%
    );
}

/* Monster Card Evolution Links */
.monster-card-links {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: calc(var(--spacing-unit) * 2);
    margin-top: calc(var(--spacing-unit) * 1.5);
    padding-top: calc(var(--spacing-unit) * 1);
    border-top: var(--line-weight) solid var(--process-black);
}

/* Ensure proper alignment of dt/dd pairs in evolution links */
.monster-card-links dl {
    display: contents; /* Remove the dl from the grid flow */
}

.evolution-label {
    font-weight: 700;
    font-size: 0.9rem;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    color: var(--black);
    margin: 0 0 calc(var(--spacing-unit) * 0.5) 0;
}

.evolution-link {
    margin: 0;
}

.evolution-link a {
    color: var(--red);
    text-decoration: none;
    font-weight: 600;
    border-bottom: 0.125rem solid var(--red);
    transition: background-color var(--transition-base), color var(--transition-base);
    display: inline-block;
}

.evolution-link a:hover,
.evolution-link a:focus {
    background-color: var(--red);
    color: var(--white);
    outline: none;
}

.evolution-link a:focus-visible {
    outline: 0.125rem solid var(--red);
    outline-offset: 0.25rem;
}

.evolution-list {
    list-style: none;
    margin: 0;
    padding: 0;
    display: flex;
    flex-direction: column;
    gap: calc(var(--spacing-unit) * 0.25);
}

.evolution-list li {
    margin: 0;
}

.evolution-list a {
    color: var(--red);
    text-decoration: none;
    font-weight: 600;
    border-bottom: 0.125rem solid var(--red);
    transition: background-color var(--transition-base), color var(--transition-base);
    display: inline-block;
}

.evolution-list a:hover,
.evolution-list a:focus {
    background-color: var(--red);
    color: var(--white);
    outline: none;
}

.evolution-list a:focus-visible {
    outline: 0.125rem solid var(--red);
    outline-offset: 0.25rem;
}

@media (max-width: 768px) {
    .monster-card-links {
        grid-template-columns: 1fr;
        gap: calc(var(--spacing-unit) * 1);
    }

    .evolution-label-left,
    .evolution-link-left {
        grid-column: 1;
    }

    .evolution-label-right,
    .evolution-link-right {
        grid-column: 1;
    }
}

@media (min-width: 769px) {
    .monster-card-body {
        grid-template-columns: 1fr 1fr;
        align-items: start;
        gap: calc(var(--spacing-unit) * 3); /* Increase gap to prevent crowding */
    }

    /* Ensure image doesn't shrink too much */
    .monster-card-image {
        min-width: 0; /* Allow image to shrink but not disappear */
    }

    /* Improve info section layout */
    .monster-card-info {
        min-width: 0; /* Prevent overflow */
        overflow-wrap: break-word;
    }

    .evolution-label-left,
    .evolution-link-left {
        grid-column: 1;
    }

    .evolution-label-right,
    .evolution-link-right {
        grid-column: 2;
    }
}

@supports (grid-template-columns: subgrid) {
    article {
        grid-column: right-column-start / right-column-end;
    }
}

section p {
    font-size: 1rem;
    line-height: 1.6;
    max-width: 65ch;
    margin-bottom: calc(var(--spacing-unit) * 1);
}

/* Inline paragraph links */
section p a {
    color: var(--red);
    text-decoration: none;
    font-weight: 600;
    border-bottom: 0.125rem solid var(--red);
    transition: background-color var(--transition-base), color var(--transition-base);
}

section p a:hover,
section p a:focus {
    background-color: var(--red);
    color: var(--white);
    outline: none;
}

section p a:focus-visible {
    outline: 0.125rem solid var(--red);
    outline-offset: 0.25rem;
}

#about .profile-image {
    float: right;
    margin: 0 0 calc(var(--spacing-unit) * 1.5) calc(var(--spacing-unit) * 2);
    shape-outside: circle(50%);
    position: relative;
}

#about .profile-image::before {
    content: '';
    position: absolute;
    /* Place at the bottom of the image, slightly extending outside */
    bottom: 15%;
    left: -10%;
    height: var(--line-weight-thick);
    /* Calculate width to reach right edge: start from left position + reach viewport edge */
    width: calc(100vw - var(--page-margin) + 10%);
    background-color: var(--red);
    mix-blend-mode: multiply;
    z-index: 2; /* Above the image to apply multiply effect */
    pointer-events: none; /* Allow clicks to pass through to image if needed */
}

#about .profile-image img {
    width: 200px;
    height: 200px;
    border-radius: 50%;
    object-fit: cover;
    border: 1px solid var(--process-black);
    position: relative;
    z-index: 1;
}

#about > p:first-of-type {
    font-size: 1.5rem;
    font-weight: 600;
    line-height: 1.3;
    margin-bottom: calc(var(--spacing-unit) * 1.5);
}

#about h3 {
    font-size: 1.1rem;
    font-weight: 700;
    margin-top: calc(var(--spacing-unit) * 2);
    margin-bottom: calc(var(--spacing-unit) * 1);
    color: var(--black);
}

#about ul {
    list-style: none;
    margin-left: 0;
    line-height: 1.8;
    padding-right: calc(var(--spacing-unit) * 2);
    border-right: var(--line-weight-thick) solid transparent;
    border-image: var(--gradient-process-black) 1;
    display: inline-block;
}

#about li {
    margin-bottom: calc(var(--spacing-unit) * 0.5);
    transition: background-color var(--transition-fast), color var(--transition-fast);
}

#about li:hover {
    background-color: var(--red);
    color: var(--white);
    cursor: default;
}

.project-grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: calc(var(--spacing-unit) * 3);
    margin-top: calc(var(--spacing-unit) * 2);
}

.project-card {
    background-color: var(--white);
    padding: calc(var(--spacing-unit) * 2);
    border: var(--line-weight-thick) solid transparent;
    border-image: var(--gradient-process-black) 1;
    position: relative;
    box-shadow: 0 0 0 var(--process-black);
    transition: box-shadow 0.4s var(--ease-bounce);
}

.project-card:hover {
    box-shadow: 0.5rem 0.5rem 0 var(--process-black);
}

.project-card h3 {
    color: var(--black);
    margin-bottom: calc(var(--spacing-unit) * 1);
    font-size: 1.5rem;
    font-weight: 700;
}

.project-card p {
    font-size: 0.95rem;
    margin-bottom: calc(var(--spacing-unit) * 0.75);
}

.project-card p:last-of-type {
    margin-bottom: 0;
}

.project-card .years {
    font-size: 0.85rem;
    font-weight: 700;
    color: var(--black);
    margin-bottom: calc(var(--spacing-unit) * 0.25);
}

.project-card .tags {
    font-size: 0.8rem;
    text-transform: uppercase;
    letter-spacing: 0.08em;
    color: var(--red);
    font-weight: 600;
    margin-bottom: calc(var(--spacing-unit) * 1);
    line-height: 1.4;
    list-style: none;
    display: flex;
    flex-wrap: wrap;
    gap: 0;
    padding: 0;
}

.project-card .tags li {
    display: inline;
    transition: background-color var(--transition-fast), color var(--transition-fast);
    padding: 0.05em 0.15em;
    margin: -0.05em -0.15em;
}

.project-card .tags li::after {
    content: ', ';
    color: var(--red);
    padding-left: 0.15em;
}

.project-card .tags li:last-child::after {
    content: '';
}

.project-card .tags li:hover {
    background-color: var(--red);
    color: var(--white);
    cursor: default;
}

.project-card .tags li:hover::after {
    color: var(--white);
}

.project-card a {
    color: var(--red);
    text-decoration: none;
    font-weight: 700;
    border-bottom: 0.125rem solid var(--red);
    text-transform: lowercase;
    font-size: 0.9rem;
    transition: background-color var(--transition-base), color var(--transition-base);
    display: inline-block;
}

.project-card a:hover::before {
    animation: arrowBounce 0.6s var(--ease-bounce);
}

@keyframes arrowBounce {
    0%, 100% {
        transform: translateX(0);
    }
    50% {
        transform: translateX(0.25rem);
    }
}

.project-card a:hover,
.project-card a:focus {
    background-color: var(--red);
    color: var(--white);
    outline: none;
}

.project-card a:focus-visible {
    outline: 0.125rem solid var(--red);
    outline-offset: 0.25rem;
}

.project-card a::before {
    content: '\2192  ';
    font-weight: 700;
    display: inline-block;
    transition: transform 0.2s var(--ease-bounce);
}

/* Aside: complementary contact info */
aside {
    /* Fallback: span full width, left-aligned (matches mobile) */
    grid-column: 1 / -1;
    grid-row: aside-start / aside-end;
    text-align: left;
    max-width: none;
    margin-left: 0;
    position: relative;
}

@supports (grid-template-columns: subgrid) {
    aside {
        /* Subgrid: place in left column with right alignment */
        grid-column: left-column-start / left-column-end;
        text-align: right;
    }
}

aside h2 {
    font-size: 1.8rem;
    display: inline-block;
    text-align: left;
}

@supports (grid-template-columns: subgrid) {
    aside h2 {
        text-align: right;
    }
}

aside ul {
    list-style: none;
    margin-left: 0;
    display: flex;
    flex-direction: column;
    gap: calc(var(--spacing-unit) * 0.5);
    align-items: flex-start; /* fallback: left alignment (matches mobile) */
}

@supports (grid-template-columns: subgrid) {
    aside ul {
        align-items: flex-end;
    }
}

aside li {
    font-size: 0.9rem;
    line-height: 1.4;
    text-align: left;
}

@supports (grid-template-columns: subgrid) {
    aside li {
        text-align: right;
    }
}

aside a {
    color: var(--red);
    text-decoration: none;
    font-weight: 600;
    border-bottom: 0.125rem solid var(--red);
    display: inline-block;
    text-transform: lowercase;
    font-size: 0.9rem;
    transition: background-color var(--transition-base), color var(--transition-base);
}

aside a::before {
    content: '\2192  ';
    font-weight: 700;
    display: inline-block;
    transition: transform 0.2s var(--ease-bounce);
}

aside a:hover::before {
    animation: arrowBounce 0.6s var(--ease-bounce);
}

aside a:hover,
aside a:focus {
    background-color: var(--red);
    color: var(--white);
    outline: none;
}

aside a:focus-visible {
    outline: 0.125rem solid var(--red);
    outline-offset: 0.25rem;
}

footer {
    background-color: var(--white);
    color: var(--black);
    padding: calc(var(--spacing-unit) * 2) calc(var(--spacing-unit) * 3);
    margin-top: calc(var(--spacing-unit) * 6);
    border-top: var(--line-weight-thick) solid transparent;
    border-image: var(--gradient-red) 1;
    grid-column: left-column-start / right-column-end;
    grid-row: footer-start / footer-end;
    display: grid;
    /* Fallback: single column for browsers without subgrid support */
    grid-template-columns: 1fr;
}

/* Modern browsers: use subgrid to align footer content with body columns */
@supports (grid-template-columns: subgrid) {
    footer {
        grid-template-columns: subgrid;
    }
}

footer p {
    font-size: 0.9rem;
}

footer a {
    color: var(--red);
    text-decoration: none;
    font-weight: 600;
    border-bottom: 0.125rem solid var(--red);
    transition: background-color var(--transition-base), color var(--transition-base);
}

footer a:hover,
footer a:focus {
    background-color: var(--red);
    color: var(--white);
    outline: none;
}

footer a:focus-visible {
    outline: 0.125rem solid var(--red);
    outline-offset: 0.25rem;
}

/* GitHub info in footer with alignment grid */
.github-info {
    margin: calc(var(--spacing-unit) * 1.5) 0;
    padding-left: calc(var(--spacing-unit) * 1);
    border-left: 0.25rem solid var(--black);
    font-size: 0.85rem;
}

/* Subgrid support: align GitHub info with right column */
@supports (grid-template-columns: subgrid) {
    .github-info {
        grid-column: right-column-start / right-column-end;
    }

    footer > p {
        grid-column: left-column-start / right-column-end;
    }
}

.branch-status {
    display: grid;
    grid-template-columns: minmax(7rem, auto) minmax(8rem, 1fr) minmax(10rem, auto);
    gap: calc(var(--spacing-unit) * 1);
    align-items: baseline;
    margin: 0.375rem 0;
    line-height: 1.6;
}

.branch-name {
    font-weight: 600;
    color: var(--black);
}

.branch-name a {
    color: var(--black);
}

.branch-meta {
    color: var(--process-black);
    font-size: 0.9em;
    letter-spacing: 0.01em;
}

.branch-time {
    color: var(--process-black);
    text-align: right;
    font-variant-numeric: tabular-nums;
}

@media (min-width: 769px) {
    .project-grid {
        grid-template-columns: 1fr 1fr;
    }

    .project-card:first-child {
        grid-column: 1 / -1;
    }
}

@media (max-width: 768px) {
    /* Collapse body grid to single column */
    body {
        grid-template-columns: 1fr;
        grid-template-rows: auto auto auto;
        margin: calc(var(--spacing-unit) * 1.5);
        gap: calc(var(--spacing-unit) * 2);
    }

    /* Header: single column, no subgrid */
    header {
        grid-column: 1 / -1;
        grid-template-columns: 1fr;
        grid-template-rows: auto auto;
        gap: calc(var(--spacing-unit) * 1.5);
    }

    header::after {
        display: none;
    }

    header h1 {
        grid-column: 1;
        grid-row: 1;
        text-align: left;
        font-size: 2.5rem;
        align-self: start;
        padding-bottom: calc(var(--spacing-unit) * 0.5);
        border-bottom: var(--line-weight-thick) solid transparent;
        border-image: var(--gradient-red) 1;
    }

    nav {
        grid-column: 1;
        grid-row: 2;
        text-align: left;
    }

    nav ul {
        flex-direction: row;
        gap: calc(var(--spacing-unit) * 1);
        align-items: center;
        padding: 0;
        border: none;
    }

    nav a {
        font-size: 1rem;
    }

    /* Main: single column */
    main {
        grid-column: 1 / -1;
        grid-template-columns: 1fr;
        padding: 0;
    }

    /* Article and aside: full width, no need for explicit positioning */
    article,
    aside {
        grid-column: 1 / -1;
    }

    section h2 {
        font-size: 2rem;
    }

    #about .profile-image {
        float: none;
        margin: 0 auto calc(var(--spacing-unit) * 2);
        display: block;
        text-align: center;
    }

    #about .profile-image img {
        width: 150px;
        height: 150px;
    }

    /* Footer: full width, disable subgrid on mobile */
    footer {
        grid-column: 1 / -1;
        padding: calc(var(--spacing-unit) * 1.5);
        display: block;
    }

    /* GitHub info: use block flow on mobile instead of grid */
    .github-info {
        display: block;
        margin: calc(var(--spacing-unit) * 1) 0;
        padding-left: calc(var(--spacing-unit) * 0.75);
        border-left-width: 0.1875rem;
    }

    .branch-status {
        display: block;
        margin: calc(var(--spacing-unit) * 0.75) 0;
    }

    .branch-name {
        display: block;
        margin-bottom: 0.25rem;
    }

    .branch-meta {
        display: inline;
        font-size: 0.85em;
    }

    .branch-meta:not(:empty)::after {
        content: ' • ';
        color: var(--process-black);
    }

    .branch-time {
        display: inline;
        text-align: left;
    }
}